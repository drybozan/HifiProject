@using HiFi.Common.Helpers
@model  HiFi.Dto.SetupDto

@using (Html.BeginForm("Singlesetup", "ProfileSettings", FormMethod.Post, new { id = "singleSetupForm" }))
{

    <div class="form-group">
        @(Html.TextBoxForControl(m => m.SetupName, new {  placeholder = "Setup Adı" }))
    </div>
    <div class="form-group">
        @(Html.TextAreaForControl(m => m.SetupDetail, new {  placeholder = "Setup Hakkında", rows = "5" }))
    </div>


    <ul class="list-group">
        <li class="list-group-item border-0 px-0">
            <div class="form-check form-switch ps-0">
                <input class="form-check-input ms-auto" type="checkbox" id="flexSwitchCheckDefault-1" @Html.HiddenFor(m => m.SetupActive)
                <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="flexSwitchCheckDefault-1">Setupı Pasif Et</label>
            </div>
        </li>
    </ul>


    @Html.HiddenFor(m => m.MemberId)
    @Html.HiddenFor(m => m.SetupId)

    <button type="submit" class="btn btn-success">Kaydet</button>
    <button type="button" class="btn btn-warning" onclick="DeleteSetup(@Model.SetupId)">Sil</button>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
    </div>

}

<script>
    $("#flexSwitchCheckDefault-1").change(function () {
        if ($(this).prop("checked")) {
            $(this).val(false);
        }
        if ($(this).prop("unchecked")) {
            $(this).val(true);
        }
    });
</script>
<script>
    function DeleteSetup(id) {
        Swal.fire({
            title: 'Silmek istiyor musunuz ?',
            icon: 'error',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Hayır',
            confirmButtonText: 'Evet'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteSetup", "ProfileSettings")/' + id,
                    datatype: 'JSON',
                    type: 'POST',
                    success: function (result) {
                        $("#modelView .close").click();
                        Swal.fire('İşlem Başarılı',
                            result,
                            'success');
                        location.reload(true);
                    }
                });
            }
        });
    }

    $("#singleSetupForm").submit(function(e) {
        e.preventDefault();
        Swal.fire({
            title: 'Değişiklikleri kaydetmek istiyor musunuz ?',
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Hayır',
            confirmButtonText: 'Evet'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: this.action,
                    type: 'post',
                    data: new FormData(this),
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $("#modelView .close").click();
                        Swal.fire('İşlem Başarılı',
                            result,
                            'success');
                        location.reload(true);
                    }
                });
            }
        });
    });
</script>